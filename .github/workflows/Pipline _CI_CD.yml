name: CI/CD

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
      
jobs:
  #depcheck:
    #runs-on: ubuntu-latest
    #name: Dependency Check
    #steps:
      #- name: Checkout
       # uses: actions/checkout@v2

      #- name: Setup .NET
      #  uses: actions/setup-dotnet@v1
      #  with:
         #dotnet-version: '6.x' # Assurez-vous de sp√©cifier la bonne version de .NET

     # - name: Install Dependency-Check global tool
       # run: dotnet tool install --global dotnet-dependency-check

     # - name: Run Dependency-Check
      #  run: dotnet dependency-check analyze --project .

      #- name: Upload Dependency-Check results
       # uses: actions/upload-artifact@v2
        #with:
         # name: dependency-check-report
          #path: dependency-check-report.html
  test:
    env:
      BUILD_CONFIG: 'Release'
      SOLUTION: 'Solution1/UnitTest.sln'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.100

      - name: Restore dependencies
        run: dotnet restore

      - name: Test
        run: dotnet test  --configuration $BUILD_CONFIG --logger "trx;LogFileName=test-results.trx" || true

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: DotNET Tests
          path: "**/test-results.trx"
          reporter: dotnet-trx
          fail-on-error: true
          github-token: ${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}
    
  sonarcloud:
    name: buld and sonarcloud
    runs-on: windows-latest
    needs: [test]
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"hamzabely2_pot_shop_official-back-end" /o:"hamzabely2" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
           dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  build-and-deploy:
    runs-on: self-hosted
    needs: [test,sonarcloud]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    
    steps:
        - name: Pull Data from main branch
          uses: actions/checkout@v2
  
